import 'dart:io';
import 'dart:typed_data';

import 'package:ai_image/api_services.dart';
import 'package:flutter/material.dart';
import 'package:path_provider/path_provider.dart';
import 'package:screenshot/screenshot.dart';
import 'package:share_plus/share_plus.dart';
import 'color.dart';

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  var sizes = ["Small", "Medium", 'Large'];
  var values = ['256x256', '512x512', '1024x1024'];
  String? dropValue;
  var textController = TextEditingController();
  String image = '';
  var isLoading = false;

  ScreenshotController screenshotController = ScreenshotController();

  shareImg() async {
    await screenshotController
        .capture(delay: const Duration(milliseconds: 100), pixelRatio: 1)
        .then((Uint8List? img) async {
      if (img != null) {
        final directory = (await getApplicationDocumentsDirectory()).path;
        const fileName = "share.png";
        final imgPath = await File("$directory/$fileName").create();
        await imgPath.writeAsBytes(img);
        Share.shareFiles([imgPath.path],
            text: "Generated by AI - Vasu Nageshri");
      } else {
        print("failed");
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      resizeToAvoidBottomInset: false,
      appBar: AppBar(
        actions: [
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: ElevatedButton(
                style: ElevatedButton.styleFrom(
                    padding: const EdgeInsets.all(8),
                    backgroundColor: btnColor),
                onPressed: () {},
                child: const Text("My Arts")),
          )
        ],
        centerTitle: true,
        title: const Text(
          "AI Image Generator",
          style: TextStyle(color: whiteColor, fontWeight: FontWeight.bold),
        ),
      ),
      body: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Column(
          children: [
            Expanded(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.spaceAround,
                children: [
                  Row(
                    children: [
                      Expanded(
                        child: Container(
                          height: 40,
                          padding: const EdgeInsets.symmetric(
                              horizontal: 16, vertical: 4),
                          decoration: BoxDecoration(
                              color: whiteColor,
                              borderRadius: BorderRadius.circular(12)),
                          child: TextFormField(
                            controller: textController,
                            decoration: const InputDecoration(
                                hintText: "eg. 'A monkey on moon'",
                                border: InputBorder.none),
                          ),
                        ),
                      ),
                      const SizedBox(
                        width: 12,
                      ),
                      Container(
                        height: 44,
                        padding: const EdgeInsets.symmetric(
                            horizontal: 8, vertical: 2),
                        decoration: BoxDecoration(
                            color: whiteColor,
                            borderRadius: BorderRadius.circular(12)),
                        child: DropdownButtonHideUnderline(
                          child: DropdownButton(
                            icon: const Icon(
                              Icons.expand_more,
                              color: btnColor,
                            ),
                            value: dropValue,
                            hint: const Text("Select Size"),
                            items: List.generate(
                              sizes.length,
                              (index) => DropdownMenuItem(
                                value: values[index],
                                child: Text(sizes[index]),
                              ),
                            ),
                            onChanged: (value) {
                              dropValue = value.toString();
                            },
                          ),
                        ),
                      ),
                    ],
                  ),
                  SizedBox(
                    height: 44,
                    width: 300,
                    child: ElevatedButton(
                        style: ElevatedButton.styleFrom(
                            backgroundColor: btnColor,
                            shape: const StadiumBorder()),
                        onPressed: () async {
                          if (textController.text.isNotEmpty &&
                              dropValue!.isNotEmpty) {
                            setState(() {
                              isLoading = false;
                            });
                            image = await Api.generateImage(
                                textController.text, dropValue!);
                            setState(() {
                              isLoading = true;
                            });
                          } else {
                            ScaffoldMessenger.of(context).showSnackBar(
                                const SnackBar(
                                    content: Text(
                                        "Please pass the query and size")));
                          }
                        },
                        child: const Text("Generate")),
                  )
                ],
              ),
            ),
            Expanded(
              flex: 4,
              child: isLoading
                  ? Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Container(
                          clipBehavior: Clip.antiAlias,
                          decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(12)),
                          child: Screenshot(
                            controller: screenshotController,
                            child: Image.network(
                              image,
                              fit: BoxFit.contain,
                            ),
                          ),
                        ),
                        const SizedBox(
                          height: 12,
                        ),
                        Row(
                          children: [
                            Expanded(
                              child: ElevatedButton.icon(
                                icon: const Icon(
                                    Icons.download_for_offline_rounded),
                                style: ElevatedButton.styleFrom(
                                    padding: const EdgeInsets.all(8),
                                    backgroundColor: btnColor),
                                onPressed: () {},
                                label: const Text("Download"),
                              ),
                            ),
                            const SizedBox(
                              width: 12,
                            ),
                            ElevatedButton.icon(
                              icon: const Icon(Icons.share),
                              style: ElevatedButton.styleFrom(
                                  padding: const EdgeInsets.all(8),
                                  backgroundColor: btnColor),
                              onPressed: () async {
                                await shareImg();
                                ScaffoldMessenger.of(context).showSnackBar(
                                  const SnackBar(
                                    content: Text("Image shared"),
                                  ),
                                );
                              },
                              label: const Text("Share"),
                            ),
                          ],
                        )
                      ],
                    )
                  : Container(
                      alignment: Alignment.center,
                      decoration: BoxDecoration(
                          borderRadius: BorderRadius.circular(12),
                          color: whiteColor),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Image.asset(
                            'assets/load.gif',
                            width: 50,
                          ),
                          const SizedBox(
                            height: 12,
                          ),
                          const Text(
                            "Waithing for image to be generated...",
                            style: TextStyle(fontSize: 16),
                          )
                        ],
                      ),
                    ),
            ),
            const Padding(
              padding: EdgeInsets.all(8),
              child: Text(
                "Developed by Vasu Nageshri",
                style: TextStyle(color: whiteColor, fontSize: 14),
              ),
            )
          ],
        ),
      ),
    );
  }
}
